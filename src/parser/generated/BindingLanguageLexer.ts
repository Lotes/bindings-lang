// Generated from src/parser/BindingLanguageLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BindingLanguageLexer extends Lexer {
	public static readonly LMUSTACHE = 1;
	public static readonly TEXT = 2;
	public static readonly UNIT = 3;
	public static readonly TRUE = 4;
	public static readonly FALSE = 5;
	public static readonly NULL = 6;
	public static readonly STRING = 7;
	public static readonly RMUSTACHE = 8;
	public static readonly LPAREN = 9;
	public static readonly RPAREN = 10;
	public static readonly DOT = 11;
	public static readonly INCH = 12;
	public static readonly ID = 13;
	public static readonly NUMBER = 14;
	public static readonly DIGIT = 15;
	public static readonly COMMA = 16;
	public static readonly WS = 17;
	public static readonly WITHIN_BINDING_MODE = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "WITHIN_BINDING_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LMUSTACHE", "TEXT", "PX", "PT", "CM", "MM", "UNIT", "TRUE", "FALSE", 
		"NULL", "STRING", "RMUSTACHE", "LPAREN", "RPAREN", "DOT", "INCH", "ID", 
		"NUMBER", "DIGIT", "COMMA", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'{{'", undefined, undefined, "'true'", "'false'", "'null'", 
		undefined, "'}}'", "'('", "')'", "'.'", "'inch'", undefined, undefined, 
		undefined, "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LMUSTACHE", "TEXT", "UNIT", "TRUE", "FALSE", "NULL", "STRING", 
		"RMUSTACHE", "LPAREN", "RPAREN", "DOT", "INCH", "ID", "NUMBER", "DIGIT", 
		"COMMA", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BindingLanguageLexer._LITERAL_NAMES, BindingLanguageLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BindingLanguageLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BindingLanguageLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "BindingLanguageLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return BindingLanguageLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return BindingLanguageLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return BindingLanguageLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return BindingLanguageLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x13\x9F\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x05" +
		"\x038\n\x03\x06\x03:\n\x03\r\x03\x0E\x03;\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x05\bO\n\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x07\fg\n\f\f\f\x0E\fj\v\f\x03\f\x03\f\x03\r" +
		"\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x07\x12\x80\n" +
		"\x12\f\x12\x0E\x12\x83\v\x12\x03\x13\x06\x13\x86\n\x13\r\x13\x0E\x13\x87" +
		"\x03\x13\x03\x13\x06\x13\x8C\n\x13\r\x13\x0E\x13\x8D\x05\x13\x90\n\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x06\x16" +
		"\x9A\n\x16\r\x16\x0E\x16\x9B\x03\x16\x03\x16\x02\x02\x02\x17\x04\x02\x03" +
		"\x06\x02\x04\b\x02\x02\n\x02\x02\f\x02\x02\x0E\x02\x02\x10\x02\x05\x12" +
		"\x02\x06\x14\x02\x07\x16\x02\b\x18\x02\t\x1A\x02\n\x1C\x02\v\x1E\x02\f" +
		" \x02\r\"\x02\x0E$\x02\x0F&\x02\x10(\x02\x11*\x02\x12,\x02\x13\x04\x02" +
		"\x03\x07\x03\x02}}\x03\x02^^\x03\x02C\\\x06\x022;C\\aac|\x03\x022;\x02" +
		"\xA8\x02\x04\x03\x02\x02\x02\x02\x06\x03\x02\x02\x02\x03\x10\x03\x02\x02" +
		"\x02\x03\x12\x03\x02\x02\x02\x03\x14\x03\x02\x02\x02\x03\x16\x03\x02\x02" +
		"\x02\x03\x18\x03\x02\x02\x02\x03\x1A\x03\x02\x02\x02\x03\x1C\x03\x02\x02" +
		"\x02\x03\x1E\x03\x02\x02\x02\x03 \x03\x02\x02\x02\x03\"\x03\x02\x02\x02" +
		"\x03$\x03\x02\x02\x02\x03&\x03\x02\x02\x02\x03(\x03\x02\x02\x02\x03*\x03" +
		"\x02\x02\x02\x03,\x03\x02\x02\x02\x04.\x03\x02\x02\x02\x069\x03\x02\x02" +
		"\x02\b=\x03\x02\x02\x02\n@\x03\x02\x02\x02\fC\x03\x02\x02\x02\x0EF\x03" +
		"\x02\x02\x02\x10N\x03\x02\x02\x02\x12P\x03\x02\x02\x02\x14U\x03\x02\x02" +
		"\x02\x16[\x03\x02\x02\x02\x18`\x03\x02\x02\x02\x1Am\x03\x02\x02\x02\x1C" +
		"r\x03\x02\x02\x02\x1Et\x03\x02\x02\x02 v\x03\x02\x02\x02\"x\x03\x02\x02" +
		"\x02$}\x03\x02\x02\x02&\x85\x03\x02\x02\x02(\x91\x03\x02\x02\x02*\x93" +
		"\x03\x02\x02\x02,\x99\x03\x02\x02\x02./\x07}\x02\x02/0\x07}\x02\x0201" +
		"\x03\x02\x02\x0212\b\x02\x02\x022\x05\x03\x02\x02\x023:\n\x02\x02\x02" +
		"47\x07}\x02\x0258\n\x02\x02\x0268\x07\x02\x02\x0375\x03\x02\x02\x0276" +
		"\x03\x02\x02\x028:\x03\x02\x02\x0293\x03\x02\x02\x0294\x03\x02\x02\x02" +
		":;\x03\x02\x02\x02;9\x03\x02\x02\x02;<\x03\x02\x02\x02<\x07\x03\x02\x02" +
		"\x02=>\x07r\x02\x02>?\x07z\x02\x02?\t\x03\x02\x02\x02@A\x07r\x02\x02A" +
		"B\x07v\x02\x02B\v\x03\x02\x02\x02CD\x07e\x02\x02DE\x07o\x02\x02E\r\x03" +
		"\x02\x02\x02FG\x07o\x02\x02GH\x07o\x02\x02H\x0F\x03\x02\x02\x02IO\x05" +
		"\b\x04\x02JO\x05\n\x05\x02KO\x05\x0E\x07\x02LO\x05\f\x06\x02MO\x05\"\x11" +
		"\x02NI\x03\x02\x02\x02NJ\x03\x02\x02\x02NK\x03\x02\x02\x02NL\x03\x02\x02" +
		"\x02NM\x03\x02\x02\x02O\x11\x03\x02\x02\x02PQ\x07v\x02\x02QR\x07t\x02" +
		"\x02RS\x07w\x02\x02ST\x07g\x02\x02T\x13\x03\x02\x02\x02UV\x07h\x02\x02" +
		"VW\x07c\x02\x02WX\x07n\x02\x02XY\x07u\x02\x02YZ\x07g\x02\x02Z\x15\x03" +
		"\x02\x02\x02[\\\x07p\x02\x02\\]\x07w\x02\x02]^\x07n\x02\x02^_\x07n\x02" +
		"\x02_\x17\x03\x02\x02\x02`h\x07$\x02\x02ag\n\x03\x02\x02bc\x07^\x02\x02" +
		"cg\x07$\x02\x02de\x07^\x02\x02eg\x07^\x02\x02fa\x03\x02\x02\x02fb\x03" +
		"\x02\x02\x02fd\x03\x02\x02\x02gj\x03\x02\x02\x02hf\x03\x02\x02\x02hi\x03" +
		"\x02\x02\x02ik\x03\x02\x02\x02jh\x03\x02\x02\x02kl\x07$\x02\x02l\x19\x03" +
		"\x02\x02\x02mn\x07\x7F\x02\x02no\x07\x7F\x02\x02op\x03\x02\x02\x02pq\b" +
		"\r\x03\x02q\x1B\x03\x02\x02\x02rs\x07*\x02\x02s\x1D\x03\x02\x02\x02tu" +
		"\x07+\x02\x02u\x1F\x03\x02\x02\x02vw\x070\x02\x02w!\x03\x02\x02\x02xy" +
		"\x07k\x02\x02yz\x07p\x02\x02z{\x07e\x02\x02{|\x07j\x02\x02|#\x03\x02\x02" +
		"\x02}\x81\t\x04\x02\x02~\x80\t\x05\x02\x02\x7F~\x03\x02\x02\x02\x80\x83" +
		"\x03\x02\x02\x02\x81\x7F\x03\x02\x02\x02\x81\x82\x03\x02\x02\x02\x82%" +
		"\x03\x02\x02\x02\x83\x81\x03\x02\x02\x02\x84\x86\x05(\x14\x02\x85\x84" +
		"\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87\x85\x03\x02\x02\x02\x87\x88" +
		"\x03\x02\x02\x02\x88\x8F\x03\x02\x02\x02\x89\x8B\x05 \x10\x02\x8A\x8C" +
		"\x05(\x14\x02\x8B\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8B" +
		"\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x90\x03\x02\x02\x02\x8F\x89" +
		"\x03\x02\x02\x02\x8F\x90\x03\x02\x02\x02\x90\'\x03\x02\x02\x02\x91\x92" +
		"\t\x06\x02\x02\x92)\x03\x02\x02\x02\x93\x94\x07.\x02\x02\x94+\x03\x02" +
		"\x02\x02\x95\x96\x07\"\x02\x02\x96\x97\x07\v\x02\x02\x97\x98\x07\x0F\x02" +
		"\x02\x98\x9A\x07\f\x02\x02\x99\x95\x03\x02\x02\x02\x9A\x9B\x03\x02\x02" +
		"\x02\x9B\x99\x03\x02\x02\x02\x9B\x9C\x03\x02\x02\x02\x9C\x9D\x03\x02\x02" +
		"\x02\x9D\x9E\b\x16\x04\x02\x9E-\x03\x02\x02\x02\x0F\x02\x0379;Nfh\x81" +
		"\x87\x8D\x8F\x9B\x05\x04\x03\x02\x04\x02\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BindingLanguageLexer.__ATN) {
			BindingLanguageLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BindingLanguageLexer._serializedATN));
		}

		return BindingLanguageLexer.__ATN;
	}

}

